apiVersion: v1
kind: Service
metadata:
  name: wordpress
  labels:
    app: wordpress
    applicationgroup: wordpress-mysql
spec:
  ports:
    - port: 80
  selector:
    app: wordpress
    tier: frontend
    applicationgroup: wordpress-mysql
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  labels:
    app: wordpress
    tier: frontend
    applicationgroup: wordpress-mysql
spec:
  replicas: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: wordpress
      tier: frontend
  template:
    metadata:
      labels:
        app: wordpress
        tier: frontend
        applicationgroup: wordpress-mysql
    spec:
      # Use the stork scheduler to enable more efficient placement of the pods
      schedulerName: stork
      containers:
      - image: wordpress:4.8-apache
        name: wordpress
        imagePullPolicy: 
        env:
        - name: WORDPRESS_DB_HOST
          value: wordpress-mysql.demo-ns-1.svc.cluster.local
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: mysqlpasswd.txt
        ports:
        - containerPort: 80
          name: wordpress
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: /var/www/html
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: wp-pv-claim
