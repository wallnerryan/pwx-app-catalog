kind: StorageClass
apiVersion: storage.k8s.io/v1beta1
metadata:
    name: mysql-storage-class
provisioner: kubernetes.io/portworx-volume
allowVolumeExpansion: true
parameters:
   repl: "3"
   fs: "ext4"
   io_profile: "db"
   priority_io: "medium"
   label: "app=mysql"

---

##### Portworx persistent volume claim
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
   # Important do not change for testing
   name: mysql-data
   labels:
     app: mysql
   annotations:
     volume.beta.kubernetes.io/storage-class: mysql-storage-class
spec:
   accessModes:
     - ReadWriteOnce
   resources:
     requests:
       storage: 100Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels: 
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
        name: "mysql"
    spec:
      containers:
      - name: mysql
        image: mysql:5.6
        env:
          # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: password
        - name: ENVVARTEST
          value: foo
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-data
